- content_for :title do
  Corsego 
  |
  = @course.title

= link_to 'Courses', courses_path
|
.fa.fa-graduation-cap
= link_to course_path(@course) do
  = @course.title

.row
  .col-lg-8.order-1.order-lg-1
    .jumbotron.shadow
      %h3
        .fa.fa-graduation-cap
        = @course.title
        /.row
        /HAS AVATAR?
        /= @course.avatar.attached?
        /- if @course.avatar.attached?
        /  = image_tag @course.avatar, width: "200px"
      %hr
      .fa.fa-tasks
      = pluralize(@course.lessons_count, 'Lesson')
      .row
      .fa.fa-clock
      Created
      = @course.created_at.strftime("%m/%Y")
      .row
      .fa.fa-clock
      Last updated
      = @course.updated_at.strftime("%m/%Y")
      .row
      .fa.fa-globe-africa
      = @course.language
      .row
      .fa.fa-signal
      = @course.level
      .row
      .fa.fa-file-pdf
      Certificate of Completion
      .row
      .fa.fa-comment
      Access to Member-Only Q&A
      .row
      .fa.fa-download
      Access to Member-Only Resources
      .row
      .fa.fa-infinity
      Full Lifetime Access & Updates
      %hr
      = @course.description

    %h4
      .fa.fa-tasks
      = pluralize(@course.lessons_count, 'lesson')
      /Lessons:
      /= @course.lessons_count
      /.float-right
      /  .fa.fa-spinner
      /  = number_to_percentage(@course.progress(current_user), precision: 0)
      /  /= certificate_button(@course)

    .list-group.lesson-sortable.shadow
      - @lessons.each do |lesson|
        = content_tag "div", id: "lesson-#{lesson.id}", data: { model_name: lesson.class.name.underscore, update_url: course_lesson_sort_path(@course, lesson)} do
          .list-group-item{:style => "cursor: grab;"}
            = render 'lessons/lesson_preview', lesson: lesson
    %p
    %h4
      .fa.fa-comment
      = pluralize(@enrollments_with_review.count, 'review')
      /Reviews:
      /= @enrollments_with_review.count

    - @enrollments_with_review.each do |enrollment|
      = render 'enrollments/enrollment', enrollment: enrollment
      %p

  .col-lg-4.order-0.order-lg-1
    .sticky-top
      = render 'courses/course', course: @course
    %p

%h4 
  .fa.fa-graduation-cap
  Related Courses

/Current course tags
/= @course.tags.pluck(:id)

/.row
/All course tags
.row
  - Course.approved.published.where.not(id: @course.id).each do |course|
    - unless @course.tags.pluck(:id).intersection(course.tags.pluck(:id)).count.zero?
      .col-md-6
        - @course.tags.pluck(:id).intersection(course.tags.pluck(:id)).each do |x|
          .badge.badge-info
            = Tag.find_by(id: x)
        = render 'courses/course', course: course
        %p
